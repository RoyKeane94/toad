function toggleMobileMenu(){document.getElementById("mobile-menu").classList.toggle("hidden")}document.addEventListener("DOMContentLoaded",function(){if(!document.getElementById("variation-tags-container"))return;const e={generic:{title:"Student Job Application Tracker",subtitle:"Perfect for internships, graduate schemes, and part-time work.",headers:["Company / Role","Research & Networking","Application Tasks","Next Steps"],rows:[{company:"Microsoft<br><i>Software Engineering Intern</i>",tasks:[[{text:"Research company culture",completed:!0},{text:"Find LinkedIn connections",completed:!1}],[{text:"Submit online application",completed:!0},{text:"Tailor CV for tech role",completed:!1}],[{text:"Prepare coding questions",completed:!1},{text:"Practice behavioral interviews",completed:!1}]]},{company:"Local Coffee Shop<br><i>Part-time Barista</i>",tasks:[[{text:"Visit location",completed:!0},{text:"Speak to manager",completed:!1}],[{text:"Drop off CV in person",completed:!1},{text:"Follow up after 1 week",completed:!1}],[{text:"Prepare for informal chat",completed:!1},{text:"Confirm availability",completed:!1}]]}]},accounting:{title:"Accounting Student Job Tracker",subtitle:"Target the Big 4 and top accounting firms with this focused tracker.",headers:["Firm / Programme","Deadlines & Research","Application Requirements","Interview Prep"],rows:[{company:"Deloitte<br><i>Summer Internship Programme</i>",tasks:[[{text:"Application deadline: Nov 30",completed:!0},{text:"Research recent deals",completed:!1}],[{text:"Online application form",completed:!1},{text:"Cover letter (500 words)",completed:!1},{text:"Academic transcript",completed:!0}],[{text:"Numerical reasoning test",completed:!1},{text:"Case study practice",completed:!1}]]},{company:"PwC<br><i>Graduate Training Scheme</i>",tasks:[[{text:"Application deadline: Dec 15",completed:!0},{text:"Attend virtual info session",completed:!0}],[{text:"Complete strengths assessment",completed:!1},{text:"Upload CV and cover letter",completed:!1}],[{text:"Partner interview prep",completed:!1},{text:"Technical accounting questions",completed:!1}]]}]},consulting:{title:"Consulting Student Job Tracker",subtitle:"Break into top consulting firms with structured preparation.",headers:["Firm / Programme","Networking & Events","Application Process","Case Interview Prep"],rows:[{company:"McKinsey & Company<br><i>Summer Business Analyst</i>",tasks:[[{text:"Attend university presentation",completed:!0},{text:"Connect with alumni on LinkedIn",completed:!1}],[{text:"Online application",completed:!1},{text:"Academic transcript",completed:!0}],[{text:"Market sizing cases",completed:!1},{text:"Profitability frameworks",completed:!1}]]},{company:"Boston Consulting Group<br><i>Associate Intern</i>",tasks:[[{text:"BCG campus coffee chats",completed:!0},{text:"Follow BCG on social media",completed:!0}],[{text:"CV and cover letter",completed:!1},{text:"University grades",completed:!0}],[{text:"Framework practice",completed:!1},{text:"Case competitions",completed:!1}]]}]},marketing:{title:"Marketing Student Job Tracker",subtitle:"Land internships and graduate roles in top marketing companies.",headers:["Company / Role","Portfolio & Experience","Application Strategy","Interview Focus"],rows:[{company:"Unilever<br><i>Brand Management Intern</i>",tasks:[[{text:"Create portfolio of projects",completed:!0},{text:"Include university campaigns",completed:!1}],[{text:"Future Leaders Programme",completed:!1},{text:"Research Unilever brands",completed:!0}],[{text:"Brand strategy questions",completed:!1},{text:"Consumer insights",completed:!1}]]},{company:"Google<br><i>Marketing Intern</i>",tasks:[[{text:"Build digital portfolio",completed:!0},{text:"Show data analytics skills",completed:!1}],[{text:"Online application",completed:!1},{text:"Academic transcript",completed:!0}],[{text:"Digital marketing trends",completed:!1},{text:"Analytics understanding",completed:!1}]]}]}},t=document.getElementById("template-preview-container"),n=document.getElementById("preview-title"),a=document.getElementById("preview-subtitle"),i=document.getElementById("variation-tags-container");function o(e,t){return`\n            <div class="group flex items-center justify-between w-full p-2 rounded-lg hover:bg-[var(--grid-header-bg)] transition-all duration-200"\n                 data-task-id="${t}"\n                 id="task-${t}">\n                <div class="flex items-center space-x-3 min-w-0 flex-1">\n                    <div class="flex-shrink-0">\n                        <input type="checkbox" \n                               id="checkbox-${t}"\n                               name="completed" \n                               ${e.completed?"checked":""}\n                               disabled\n                               class="w-4 h-4 rounded border-gray-300 text-[var(--primary-action-bg)] focus:ring-[var(--primary-action-bg)] cursor-pointer ${e.completed?"checkbox-completed":""}">\n                    </div>\n                    <div id="task-text-${t}" class="text-sm task-text ${e.completed?"task-completed-strikethrough":""} leading-relaxed">${e.text}</div>\n                </div>\n            </div>`}function r(i){const r=e[i];if(!r)return;n.textContent=r.title,a.textContent=r.subtitle;const s=window.innerWidth<768;let c=`\n            <div class="grid-with-controls" style="background: var(--container-bg);">\n                <div class="grid-container-wrapper" style="display: flex;">\n                    \x3c!-- Fixed Category Column --\x3e\n                    <div class="grid-table-fixed-col">\n                        <table class="grid-table-fixed">\n                            <colgroup>\n                                <col class="category-column" style="width: ${s?"140px":"300px"};">\n                            </colgroup>\n                            <thead>\n                                <tr>\n                                    <th class="p-2 md:p-4" style="background-color: var(--container-bg) !important;"></th>\n                                </tr>\n                            </thead>\n                            <tbody>`;r.rows.forEach(e=>{c+=`\n                                <tr>\n                                    <td class="p-2 md:p-4">\n                                        <div class="flex items-center justify-between">\n                                            <span class="text-green-600 font-semibold truncate text-xs md:text-sm">${e.company}</span>\n                                        </div>\n                                    </td>\n                                </tr>`}),c+=`\n                            </tbody>\n                        </table>\n                    </div>\n                    \n                    \x3c!-- Scrollable Data Columns --\x3e\n                    <div class="grid-table-scrollable" style="overflow-x: auto;">\n                        <table class="grid-table" data-total-data-columns="${r.headers.length-1}">\n                            <colgroup>`;for(let e=1;e<r.headers.length;e++)c+=`<col class="data-column" style="width: ${s?"200px":"280px"};">`;c+="\n                            </colgroup>\n                            <thead>\n                                <tr>";for(let e=1;e<r.headers.length;e++)c+=`\n                                    <th class="p-2 md:p-4 font-medium" style="background-color: var(--container-bg) !important;">\n                                        <div class="flex items-center justify-between">\n                                            <span class="text-green-600 font-semibold truncate text-xs md:text-sm">${r.headers[e]}</span>\n                                        </div>\n                                    </th>`;c+="\n                                </tr>\n                            </thead>\n                            <tbody>",r.rows.forEach((e,t)=>{c+="<tr>";for(let n=1;n<r.headers.length;n++){const a=e.tasks[n-1]||[];let r="";a.forEach((e,a)=>{r+=o(e,`template-${i}-${t}-${n}-${a}`)}),c+=`\n                                <td class="relative" style="min-height: ${s?"140px":"180px"}; vertical-align: top;">\n                                    <div class="space-y-2 pb-12 md:pb-16 p-1 md:p-2" style="min-height: calc(100% - ${s?"40px":"60px"});">\n                                        ${r}\n                                    </div>\n                                    <div class="absolute bottom-2 md:bottom-3 left-2 md:left-3 right-2 md:right-3 pt-2 md:pt-3 border-t border-[var(--border-color)]/30 bg-[var(--container-bg)]" style="height: ${s?"40px":"60px"}; display: flex; align-items: center;">\n                                        <div class="w-full">\n                                            <button type="button" class="w-full text-left py-1.5 md:py-2 px-2 md:px-3 text-[var(--primary-action-bg)] hover:text-[var(--primary-action-hover-bg)] hover:bg-[var(--grid-header-bg)] transition-all duration-200 text-xs md:text-sm cursor-pointer rounded-md" style="height: ${s?"28px":"36px"};">\n                                                <i class="fas fa-plus text-xs mr-1 md:mr-2"></i>Add task...\n                                            </button>\n                                        </div>\n                                    </div>\n                                </td>`}c+="</tr>"}),c+="\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>",t.classList.add("fade-out"),setTimeout(()=>{t.innerHTML=c,t.classList.remove("fade-out")},150)}let s;window.addEventListener("resize",function(){clearTimeout(s),s=setTimeout(function(){const e=i.querySelector(".variation-tag.active");e&&r(e.dataset.template)},250)}),i&&t&&n&&a&&(i.addEventListener("click",function(e){const t=e.target;if(!t.classList.contains("variation-tag"))return;i.querySelectorAll(".variation-tag").forEach(e=>{e.classList.remove("active"),e.classList.remove("bg-[var(--primary-action-bg)]","text-[var(--primary-action-text)]"),e.classList.add("bg-[var(--grid-header-bg)]","text-[var(--text-secondary)]")}),t.classList.add("active"),t.classList.remove("bg-[var(--grid-header-bg)]","text-[var(--text-secondary)]"),t.classList.add("bg-[var(--primary-action-bg)]","text-[var(--primary-action-text)]"),r(t.dataset.template)}),r("generic"))});